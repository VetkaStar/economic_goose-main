import { defineStore } from 'pinia'
import { ref } from 'vue'

export interface Character {
  id: number
  name: string
  title: string
  image: string
  level: number
  levelProgress: number
  skillPoints: number
  description: string
  skills: Skill[]
}

export interface Skill {
  id: number
  name: string
  description: string
  level: number
  maxLevel: number
  cost: number
}

export const useCharacterStore = defineStore('character', () => {
  // –î–∞–Ω–Ω—ã–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π
  const characters = ref<Character[]>([
    {
      id: 1,
      name: '–ü–µ—Ä—Å–æ–Ω–∞–∂ 1',
      title: '–ù–∞—á–∏–Ω–∞—é—â–∏–π –¥–∏–∑–∞–π–Ω–µ—Ä',
      image: '/characters/pers-1.svg',
      level: 1,
      levelProgress: 25,
      skillPoints: 3,
      description: '–ú–æ–ª–æ–¥–æ–π –≥—É—Å—å —Å –±–æ–ª—å—à–∏–º–∏ –∞–º–±–∏—Ü–∏—è–º–∏ –≤ –º–∏—Ä–µ –º–æ–¥—ã. –ù–∞—á–∏–Ω–∞–µ—Ç —Å–≤–æ–π –ø—É—Ç—å —Å –ø—Ä–æ—Å—Ç—ã—Ö –¥–∏–∑–∞–π–Ω–æ–≤.',
      skills: [
        {
          id: 1,
          name: '–û—Å–Ω–æ–≤—ã –¥–∏–∑–∞–π–Ω–∞',
          description: '–£–ª—É—á—à–∞–µ—Ç –∫–∞—á–µ—Å—Ç–≤–æ –±–∞–∑–æ–≤—ã—Ö –¥–∏–∑–∞–π–Ω–æ–≤ –Ω–∞ 10% –∑–∞ —É—Ä–æ–≤–µ–Ω—å',
          level: 1,
          maxLevel: 5,
          cost: 1
        },
        {
          id: 2,
          name: '–†–∞–±–æ—Ç–∞ —Å —Ç–∫–∞–Ω—å—é',
          description: '–°–Ω–∏–∂–∞–µ—Ç —Ä–∞—Å—Ö–æ–¥ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –Ω–∞ 5% –∑–∞ —É—Ä–æ–≤–µ–Ω—å',
          level: 0,
          maxLevel: 3,
          cost: 2
        },
        {
          id: 3,
          name: '–ö—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å',
          description: '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å–∫–æ—Ä–æ—Å—Ç—å —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤—ã—Ö –¥–∏–∑–∞–π–Ω–æ–≤ –Ω–∞ 15% –∑–∞ —É—Ä–æ–≤–µ–Ω—å',
          level: 0,
          maxLevel: 4,
          cost: 1
        }
      ]
    },
    {
      id: 2,
      name: '–ü–µ—Ä—Å–æ–Ω–∞–∂ 2',
      title: '–û–ø—ã—Ç–Ω—ã–π –º–æ–¥–µ–ª—å–µ—Ä',
      image: '/characters/pers-2.svg',
      level: 3,
      levelProgress: 60,
      skillPoints: 5,
      description: '–ì—É—Å—å —Å —Ö–æ—Ä–æ—à–∏–º –æ–ø—ã—Ç–æ–º –≤ –º–æ–¥–µ. –ó–Ω–∞–µ—Ç —Ç—Ä–µ–Ω–¥—ã –∏ –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å—Ç–∏–ª—å–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏.',
      skills: [
        {
          id: 1,
          name: '–ú–æ–¥–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã',
          description: '–£–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç –ø–æ–ø—É–ª—è—Ä–Ω–æ—Å—Ç—å –æ–¥–µ–∂–¥—ã –Ω–∞ 12% –∑–∞ —É—Ä–æ–≤–µ–Ω—å',
          level: 2,
          maxLevel: 5,
          cost: 2
        },
        {
          id: 2,
          name: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π',
          description: '–ü–æ–≤—ã—à–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –Ω–∞ 8% –∑–∞ —É—Ä–æ–≤–µ–Ω—å',
          level: 1,
          maxLevel: 4,
          cost: 3
        },
        {
          id: 3,
          name: '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥',
          description: '–°–Ω–∏–∂–∞–µ—Ç —Å—Ç–æ–∏–º–æ—Å—Ç—å —Ä–µ–∫–ª–∞–º—ã –Ω–∞ 7% –∑–∞ —É—Ä–æ–≤–µ–Ω—å',
          level: 0,
          maxLevel: 3,
          cost: 2
        }
      ]
    },
    {
      id: 3,
      name: '–ü–µ—Ä—Å–æ–Ω–∞–∂ 3',
      title: '–ú–æ–¥–Ω—ã–π –º–∞–≥–Ω–∞—Ç',
      image: '/characters/pers-3.svg',
      level: 5,
      levelProgress: 80,
      skillPoints: 8,
      description: '–í–µ–ª–∏–∫–æ–ª–µ–ø–Ω—ã–π –≥—É—Å—å-–¥–∏–∑–∞–π–Ω–µ—Ä, –≤–ª–∞–¥–µ—é—â–∏–π —Å–æ–±—Å—Ç–≤–µ–Ω–Ω–æ–π –º–æ–¥–Ω–æ–π –∏–º–ø–µ—Ä–∏–µ–π. –°–æ–∑–¥–∞–µ—Ç —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏.',
      skills: [
        {
          id: 1,
          name: '–≠–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –¥–∏–∑–∞–π–Ω—ã',
          description: '–°–æ–∑–¥–∞–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω—É—é –æ–¥–µ–∂–¥—É, —É–≤–µ–ª–∏—á–∏–≤–∞—è –ø—Ä–∏–±—ã–ª—å –Ω–∞ 15% –∑–∞ —É—Ä–æ–≤–µ–Ω—å',
          level: 3,
          maxLevel: 5,
          cost: 3
        },
        {
          id: 2,
          name: '–ú–µ–∂–¥—É–Ω–∞—Ä–æ–¥–Ω—ã–µ —Å–≤—è–∑–∏',
          description: '–û—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–µ–º–∏—É–º –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º, —Å–Ω–∏–∂–∞—è –∏—Ö —Å—Ç–æ–∏–º–æ—Å—Ç—å –Ω–∞ 10% –∑–∞ —É—Ä–æ–≤–µ–Ω—å',
          level: 2,
          maxLevel: 4,
          cost: 4
        },
        {
          id: 3,
          name: '–ë—Ä–µ–Ω–¥–∏–Ω–≥',
          description: '–ü–æ–≤—ã—à–∞–µ—Ç —É–∑–Ω–∞–≤–∞–µ–º–æ—Å—Ç—å –±—Ä–µ–Ω–¥–∞, —É–≤–µ–ª–∏—á–∏–≤–∞—è –ª–æ—è–ª—å–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–æ–≤ –Ω–∞ 20% –∑–∞ —É—Ä–æ–≤–µ–Ω—å',
          level: 1,
          maxLevel: 3,
          cost: 5
        }
      ]
    }
  ])

  // –í—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂
  const selectedCharacter = ref<Character | null>(null)

  // –î–µ–π—Å—Ç–≤–∏—è
  const selectCharacter = (character: Character) => {
    selectedCharacter.value = character
    console.log('üé≠ –í—ã–±—Ä–∞–Ω –ø–µ—Ä—Å–æ–Ω–∞–∂:', character.name)
  }

  const upgradeSkill = (character: Character, skill: Skill) => {
    if (character.skillPoints >= skill.cost && skill.level < skill.maxLevel) {
      skill.level++
      character.skillPoints -= skill.cost
      skill.cost = Math.ceil(skill.cost * 1.5) // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º —Å—Ç–æ–∏–º–æ—Å—Ç—å —Å–ª–µ–¥—É—é—â–µ–≥–æ —É—Ä–æ–≤–Ω—è
      console.log(`üîß –ù–∞–≤—ã–∫ "${skill.name}" —É–ª—É—á—à–µ–Ω –¥–æ —É—Ä–æ–≤–Ω—è ${skill.level}`)
    }
  }

  const loadSelectedCharacter = () => {
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –∏–∑ localStorage
    const savedCharacterId = localStorage.getItem('selectedCharacterId')
    if (savedCharacterId) {
      const character = characters.value.find(c => c.id === parseInt(savedCharacterId))
      if (character) {
        selectedCharacter.value = character
        console.log('üìÇ –ó–∞–≥—Ä—É–∂–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–π –ø–µ—Ä—Å–æ–Ω–∞–∂:', character.name)
      }
    } else {
      // –ï—Å–ª–∏ –Ω–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞, –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤–æ–≥–æ
      selectedCharacter.value = characters.value[0]
      console.log('üé≠ –í—ã–±—Ä–∞–Ω –ø–µ—Ä—Å–æ–Ω–∞–∂ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é:', characters.value[0].name)
    }
  }

  const saveSelectedCharacter = () => {
    // –°–æ—Ö—Ä–∞–Ω—è–µ–º ID –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –≤ localStorage
    if (selectedCharacter.value) {
      localStorage.setItem('selectedCharacterId', selectedCharacter.value.id.toString())
      console.log('üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω –ø–µ—Ä—Å–æ–Ω–∞–∂:', selectedCharacter.value.name)
    }
  }

  return {
    characters,
    selectedCharacter,
    selectCharacter,
    upgradeSkill,
    loadSelectedCharacter,
    saveSelectedCharacter
  }
})
